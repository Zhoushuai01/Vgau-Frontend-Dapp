import{a as e,w as s}from"./apiService.Bl7qyh6B.js";const t=async()=>{try{if(void 0!==window.ethereum){const e=await window.ethereum.request({method:"eth_accounts"});return e.length>0?e[0]:null}return null}catch(e){return console.error("检查钱包连接失败:",e),null}},r=async(e,t)=>{try{if(!e)throw new Error("钱包地址不能为空");if(!t)throw new Error("链ID不能为空，chainId是必需的参数");if(!(e=>!!e&&"number"==typeof e&&e>0&&Number.isInteger(e))(t))throw new Error("链ID格式无效，必须是10进制数字");console.log("🔥 调用挑战接口 /wallet/login/challenge，参数:",{walletAddress:e,chainId:t,chainIdType:typeof t});const r=await s.createLoginChallenge(e,t);return console.log("✅ 挑战接口响应:",r),r}catch(r){throw console.error("❌ 创建签名挑战失败:",r),console.error("错误详情:",{message:r.message,stack:r.stack,name:r.name}),r}},n=async()=>{try{console.log("🚀 开始智能用户验证...");const s=await(async()=>{try{console.log("🔍 强制从后端检查用户登录状态...");const s=await e.getMe();return s&&s.success?(console.log("✅ 从后端获取到用户已登录状态:",s.data),{isLoggedIn:!0,userData:s.data}):(console.log("❌ 后端返回用户未登录状态"),{isLoggedIn:!1,userData:null})}catch(s){return console.log("❌ 从后端检查用户登录状态失败:",s.message),{isLoggedIn:!1,userData:null}}})();if(s.isLoggedIn)return console.log("✅ 用户已登录，跳过钱包验证"),{success:!0,isLoggedIn:!0,userData:s.userData,skipWalletCheck:!0};console.log("⚠️ 用户未登录，需要进行钱包验证");const t=await a();return t.success?{success:!0,isLoggedIn:!0,walletAddress:t.walletAddress,userData:t.userData,token:t.token,skipWalletCheck:!1}:t}catch(s){return console.error("智能用户验证失败:",s),{success:!1,error:"SMART_VERIFY_FAILED",message:s.message||"用户验证失败"}}},a=async()=>{try{let e=await t();e||(e=await(async()=>{try{if(void 0!==window.ethereum)return(await window.ethereum.request({method:"eth_requestAccounts"}))[0];throw new Error("未检测到MetaMask钱包")}catch(e){throw console.error("连接钱包失败:",e),e}})());const n=await o();if(!n)return{success:!1,error:"CHAIN_ID_MISSING",message:"无法获取当前网络链ID，请确保钱包已连接并切换到正确的网络"};const a=await r(e,n),i=await(async(e,s)=>{try{if(void 0!==window.ethereum)return await window.ethereum.request({method:"personal_sign",params:[e,s]});throw new Error("未检测到MetaMask钱包")}catch(t){throw console.error("签名消息失败:",t),t}})(a.data.challengeMessage,e),c={signature:i,signerAddress:e},u=await(async e=>{try{console.log("🔥 调用确认接口 /wallet/login/confirm，参数:",e);const t=await s.verifyLoginSignature(e);return console.log("✅ 确认接口响应:",t),t}catch(t){throw console.error("❌ 验证签名失败:",t),t}})(c);return{success:!0,walletAddress:e,userData:u.userData,token:u.token}}catch(e){console.error("钱包登录失败:",e);const s=function(e){console.log("🔍 分析钱包登录错误:",e);const s=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);console.log("📱 设备信息:",{userAgent:navigator.userAgent,platform:navigator.platform,isMobile:s,errorType:typeof e,errorKeys:Object.keys(e),errorMessage:e.message,errorStack:e.stack});const t={userMessage:"钱包登录失败",details:"",suggestions:[]};if(e.message){const s=e.message.toLowerCase();s.includes("network")||s.includes("fetch")||s.includes("timeout")||s.includes("connection")?(t.userMessage="网络连接失败",t.details="无法连接到服务器，可能是网络问题或服务器暂时不可用",t.suggestions=["检查网络连接是否正常","检查VPN设置","尝试切换网络","稍后重试"]):s.includes("wallet")||s.includes("metamask")||s.includes("provider")||s.includes("ethereum")?(t.userMessage="钱包连接失败",t.details="无法连接到MetaMask钱包，请检查钱包状态",t.suggestions=["确保MetaMask已安装并解锁","检查钱包是否连接到正确的网络","尝试重新连接钱包","刷新页面后重试"]):s.includes("user rejected")||s.includes("user denied")||s.includes("cancel")||s.includes("rejected")?(t.userMessage="用户取消了操作",t.details="您在MetaMask中取消了钱包连接或签名请求",t.suggestions=['请重新点击"连接钱包"按钮',"在MetaMask中确认连接请求","检查MetaMask弹窗是否被阻止"]):s.includes("chain")||s.includes("network")||s.includes("unsupported")||s.includes("chainid")?(t.userMessage="网络不支持",t.details="当前网络不被支持，请切换到正确的网络",t.suggestions=["切换到BSC测试网 (Chain ID: 97)","检查钱包网络设置","确保网络配置正确"]):s.includes("signature")||s.includes("sign")||s.includes("personal_sign")||s.includes("signing")?(t.userMessage="消息签名失败",t.details="无法完成消息签名，可能是钱包问题或用户拒绝",t.suggestions=["在MetaMask中确认签名请求","检查签名消息内容","重新尝试签名操作"]):s.includes("server")||s.includes("500")||s.includes("502")||s.includes("503")||s.includes("http")?(t.userMessage="服务器暂时不可用",t.details="服务器可能正在维护或遇到技术问题",t.suggestions=["稍后重试","检查服务状态","联系客服支持"]):s.includes("auth")||s.includes("unauthorized")||s.includes("401")||s.includes("login")?(t.userMessage="认证失败",t.details="用户认证信息无效或已过期",t.suggestions=["重新登录","清除浏览器缓存","检查登录状态"]):s.includes("mobile")||s.includes("android")||s.includes("ios")||s.includes("phone")?(t.userMessage="移动端连接问题",t.details="移动端钱包连接可能存在兼容性问题",t.suggestions=["确保使用最新版本的MetaMask","尝试在桌面端操作","检查移动端网络设置","联系技术支持"]):(t.userMessage="连接失败，请重试",t.details=`发生未知错误: ${e.message}`,t.suggestions=["刷新页面后重试","检查钱包状态","联系技术支持","查看控制台错误日志"])}e.message||(t.userMessage="连接失败，请重试",t.details="钱包连接过程中发生未知错误",t.suggestions=["刷新页面后重试","检查钱包状态","联系技术支持"]);return console.log("📋 错误分析结果:",t),console.log("🔍 最终错误信息:",{"用户消息":t.userMessage,"错误详情":t.details,"解决建议":t.suggestions,"设备类型":s?"移动端":"桌面端","原始错误":e.message}),t}(e);if(e.response&&400===e.response.status){const t=e.response.data;if("WALLET_NOT_BOUND"===t.code)return{success:!1,error:"WALLET_NOT_BOUND",message:t.message||"钱包未绑定用户账户",details:s.details,suggestions:s.suggestions}}return{success:!1,error:"LOGIN_FAILED",message:s.userMessage,details:s.details,suggestions:s.suggestions}}},o=async()=>{try{if(void 0!==window.ethereum){const e=await window.ethereum.request({method:"eth_chainId"});return parseInt(e,16)}return null}catch(e){return console.error("获取链ID失败:",e),null}};export{t as c,n as s};
