import{_ as e,r as a,u as s,o as t,v as o,d as r,w as l,i,e as n,f as c,g as u,h as d,k as g,t as m,I as h,j as v,n as f,s as p,l as y,m as M,F as _,p as k,M as w,z as b,A as E,B as R}from"./index-BYz-dWzL.js";import{_ as N}from"./back.BFYz81iB.js";import{_ as I}from"./VGAU.Ch6IAJzM.js";import{c as P}from"./contractService.ChR1Iy-b.js";import"./BEP20USDT.4l3CktaQ.js";import"./apiService.Bl7qyh6B.js";import"./VGAUPlatformRecharge.BXpF-dn-.js";const T=new class{constructor(){this.isMobile=this.detectMobileDevice(),this.deviceInfo=this.getDeviceInfo(),this.errorLogs=[],this.maxLogs=10}detectMobileDevice(){const e=navigator.userAgent||navigator.vendor||window.opera;return/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e.toLowerCase())}getDeviceInfo(){return{userAgent:navigator.userAgent,platform:navigator.platform,language:navigator.language,cookieEnabled:navigator.cookieEnabled,onLine:navigator.onLine,isMobile:this.isMobile,screenWidth:window.screen.width,screenHeight:window.screen.height,viewportWidth:window.innerWidth,viewportHeight:window.innerHeight}}async detectWalletEnvironment(){const e={hasEthereum:void 0!==window.ethereum,hasMetaMask:!1,isUnlocked:!1,isConnected:!1,currentAccount:null,chainId:null,networkName:null};try{if(e.hasEthereum){e.hasMetaMask=window.ethereum.isMetaMask||!1;try{const a=await window.ethereum.request({method:"eth_accounts"});e.isUnlocked=a.length>0,e.isConnected=a.length>0,e.currentAccount=a[0]||null}catch(a){console.log("检测钱包解锁状态失败:",a.message)}try{const a=await window.ethereum.request({method:"eth_chainId"});e.chainId=parseInt(a,16),e.networkName=this.getNetworkName(e.chainId)}catch(a){console.log("检测网络状态失败:",a.message)}}}catch(a){console.error("检测钱包环境失败:",a)}return e}getNetworkName(e){return{1:"Ethereum Mainnet",97:"BSC Testnet",137:"Polygon",80001:"Mumbai Testnet"}[e]||`Unknown Network (${e})`}analyzeMobileError(e,a={}){console.log("🔍 开始分析移动端错误...",{error:e.message,context:a,deviceInfo:this.deviceInfo});const s={isMobile:this.isMobile,deviceInfo:this.deviceInfo,errorType:"UNKNOWN",userMessage:"移动端连接失败",details:"",suggestions:[],technicalDetails:{originalError:e.message,errorStack:e.stack,context:a}};if(e.message){const a=e.message.toLowerCase();a.includes("mobile")||a.includes("android")||a.includes("ios")?(s.errorType="MOBILE_SPECIFIC",s.userMessage="移动端兼容性问题",s.details="检测到移动端特定的错误，可能是设备兼容性问题",s.suggestions=["确保使用最新版本的MetaMask","尝试在桌面端操作","检查移动端网络设置","清除浏览器缓存和Cookie","联系技术支持"]):a.includes("network")||a.includes("fetch")||a.includes("timeout")?(s.errorType="NETWORK_ERROR",s.userMessage="网络连接失败",s.details="移动端网络连接不稳定，可能是网络问题或VPN设置",s.suggestions=["检查移动网络或WiFi连接","尝试切换网络（4G/5G/WiFi）","检查VPN设置","稍后重试","联系网络运营商"]):a.includes("wallet")||a.includes("metamask")||a.includes("provider")?(s.errorType="WALLET_ERROR",s.userMessage="钱包连接失败",s.details="移动端MetaMask连接问题，可能是钱包状态或权限问题",s.suggestions=["确保MetaMask已安装并解锁","检查钱包是否连接到正确的网络","尝试重新连接钱包","检查浏览器权限设置","刷新页面后重试"]):a.includes("user rejected")||a.includes("user denied")||a.includes("cancel")?(s.errorType="USER_REJECTED",s.userMessage="用户取消了操作",s.details="您在移动端MetaMask中取消了操作",s.suggestions=["请重新点击确认按钮","在MetaMask中确认操作请求","检查MetaMask弹窗是否被阻止","确保MetaMask在前台运行"]):(s.errorType="GENERAL_ERROR",s.userMessage="移动端操作失败",s.details=`发生未知错误: ${e.message}`,s.suggestions=["刷新页面后重试","检查钱包状态","尝试在桌面端操作","联系技术支持"])}return this.logError(s),console.log("📋 移动端错误分析完成:",s),s}logError(e){const a={timestamp:(new Date).toISOString(),analysis:e,deviceInfo:this.deviceInfo};this.errorLogs.push(a),this.errorLogs.length>this.maxLogs&&(this.errorLogs=this.errorLogs.slice(-this.maxLogs));try{localStorage.setItem("mobile_error_logs",JSON.stringify(this.errorLogs))}catch(s){console.error("保存移动端错误日志失败:",s)}}getErrorLogs(){return this.errorLogs}clearErrorLogs(){this.errorLogs=[];try{localStorage.removeItem("mobile_error_logs")}catch(e){console.error("清除移动端错误日志失败:",e)}}generateErrorReport(){return{deviceInfo:this.deviceInfo,errorLogs:this.errorLogs,summary:{totalErrors:this.errorLogs.length,lastError:this.errorLogs[this.errorLogs.length-1],timestamp:(new Date).toISOString()}}}async checkCommonMobileIssues(){const e=[];try{const a=await this.detectWalletEnvironment();a.hasEthereum||e.push({type:"NO_ETHEREUM",severity:"high",message:"未检测到以太坊环境",suggestion:"请安装MetaMask钱包"}),a.hasMetaMask||e.push({type:"NO_METAMASK",severity:"high",message:"未检测到MetaMask",suggestion:"请安装MetaMask钱包"}),a.isUnlocked||e.push({type:"WALLET_LOCKED",severity:"medium",message:"钱包已锁定",suggestion:"请在MetaMask中解锁钱包"}),a.chainId&&![97].includes(a.chainId)&&e.push({type:"WRONG_NETWORK",severity:"medium",message:`当前网络不支持: ${a.networkName}`,suggestion:"请切换到BSC网络"}),navigator.onLine||e.push({type:"OFFLINE",severity:"high",message:"设备处于离线状态",suggestion:"请检查网络连接"})}catch(a){console.error("检查移动端常见问题失败:",a)}return e}},C=e({__name:"VGAURecharge",setup(e){const C=a(""),$=a("0.000000"),A=a(!1),L=a(""),x=a(!1),O=a(""),D=a(!1),S=a(!1),U=a({message:"",details:"",suggestions:[],errorType:"",contractName:"",methodName:"",timestamp:""}),{t:G}=s();t((async()=>{try{console.log("📱 页面初始化开始..."),T.isMobile&&(console.log("📱 检测到移动端设备"),await V()),await W(),await B(),console.log("✅ 页面初始化完成")}catch(e){console.error("❌ 页面初始化失败:",e)}}));const V=async()=>{try{console.log("🔍 开始检查移动端环境...");const e=await T.checkCommonMobileIssues();e.length>0?(console.log("⚠️ 发现移动端问题:",e),e.forEach((e=>{"high"===e.severity&&o({title:e.message,icon:"none",duration:4e3})}))):console.log("✅ 移动端环境检查通过");const a=await T.detectWalletEnvironment();console.log("📱 移动端钱包环境:",a)}catch(e){console.error("❌ 移动端环境检查失败:",e)}},W=async()=>{try{A.value=!0,await P.init(),console.log("✅ 合约服务初始化成功")}catch(e){console.error("❌ 合约服务初始化失败:",e),o({title:G("rechargePage.contractInitFailed"),icon:"none",duration:3e3})}finally{A.value=!1}},B=async()=>{try{console.log("🔄 开始加载用户数据..."),console.log("📊 正在获取VGAU余额...");const e=await P.getVGAUBalance();console.log("💰 VGAU余额获取成功:",e),$.value=e.raw,console.log("💳 设置VGAU余额显示:",$.value),console.log("🌐 正在获取网络信息...");const a=await P.getNetworkInfo();L.value=a.currentAccount,console.log("🔗 网络信息获取成功:",a),console.log("✅ 用户数据加载成功"),console.log("📱 当前VGAU余额:",$.value),console.log("👛 钱包地址:",L.value)}catch(e){console.error("❌ 用户数据加载失败:",e),o({title:`余额加载失败: ${e.message}`,icon:"none",duration:3e3}),$.value="0.00"}},F=()=>{w()},j=e=>{C.value=e.detail.value},H=async()=>{if(!C.value||parseFloat(C.value)<=0)return void o({title:G("rechargePage.pleaseEnterValidAmount"),icon:"none",duration:2e3});const e=parseFloat(C.value);try{A.value=!0,O.value=e.toString(),x.value=!0}catch(a){console.error("充值操作失败:",a),o({title:G("rechargePage.rechargeFailed"),icon:"none",duration:3e3})}finally{A.value=!1}},K=async e=>{try{A.value=!0,b({title:G("recharge.loading"),mask:!0});const a=await P.completeVGAURecharge(e);E(),a&&a.transactionHash&&(o({title:G("rechargePage.rechargeSuccess"),icon:"success",duration:3e3}),await B(),C.value="",w())}catch(a){E(),console.error("❌ 充值执行失败:",a),a.message&&a.message.includes("RPC endpoint returned HTTP client error")?J(a):q(a)}finally{A.value=!1}},z=async()=>{const e=O.value;x.value=!1,await K(e)},J=e=>{console.log("🔍 显示RPC错误模态框:",e);const a={message:"区块链网络连接失败",details:"RPC节点暂时不可用，可能是网络拥堵或节点维护",suggestions:["检查网络连接是否正常","尝试切换网络（4G/5G/WiFi）","检查VPN设置","稍后重试（可能是网络拥堵）","尝试使用其他RPC节点"],errorType:"RPC_ERROR",contractName:e.contractName||"未知",methodName:e.methodName||"未知",timestamp:(new Date).toISOString()};U.value=a,D.value=!0,S.value=!1},q=async e=>{console.log("🔍 显示充值错误模态框:",e);const a=await Z(e);let s={message:a.userMessage,details:a.details,suggestions:a.suggestions,errorType:a.errorType,contractName:a.contractName,methodName:a.methodName,timestamp:a.timestamp,technicalDetails:a.technicalDetails};U.value=s,D.value=!0,S.value=!1},Z=async e=>{console.log("🔍 开始详细分析充值错误...",e);const a={userMessage:"充值失败",details:"",suggestions:[],errorType:"UNKNOWN",contractName:e.contractName||"未知",methodName:e.methodName||"未知",timestamp:(new Date).toISOString(),technicalDetails:{}};if(e.message){const s=e.message.toLowerCase();s.includes("rpc")||s.includes("http client error")||s.includes("-32080")?(a.errorType="RPC_ERROR",a.userMessage="区块链网络连接失败",a.details="RPC节点暂时不可用，可能是网络拥堵或节点维护",a.suggestions=["检查网络连接是否正常","尝试切换网络（4G/5G/WiFi）","检查VPN设置","稍后重试（可能是网络拥堵）","尝试使用其他RPC节点"]):s.includes("gas")||s.includes("insufficient funds")||s.includes("out of gas")?(a.errorType="GAS_ERROR",a.userMessage="Gas费用不足或余额不足",a.details="账户BNB余额不足以支付交易手续费",a.suggestions=["检查账户BNB余额是否充足","尝试减少充值金额","检查Gas费用设置","确保有足够的BNB支付手续费"]):s.includes("approve")||s.includes("allowance")||s.includes("permission")?(a.errorType="AUTHORIZATION_ERROR",a.userMessage="授权失败",a.details="VGAU代币授权操作失败，可能是权限不足或合约问题",a.suggestions=["检查钱包是否已连接","确认授权操作","尝试重新授权","检查合约状态"]):s.includes("contract")||s.includes("method")||s.includes("abi")||s.includes("execution reverted")?(a.errorType="CONTRACT_ERROR",a.userMessage="合约调用失败",a.details="智能合约执行失败，可能是合约问题或参数错误",a.suggestions=["检查合约地址是否正确","验证合约方法是否存在","检查参数格式是否正确","联系技术支持"]):s.includes("network")||s.includes("fetch")||s.includes("timeout")||s.includes("connection")?(a.errorType="NETWORK_ERROR",a.userMessage="网络连接失败",a.details="无法连接到区块链网络，可能是网络问题或服务器暂时不可用",a.suggestions=["检查网络连接是否正常","检查VPN设置","尝试切换网络","稍后重试"]):s.includes("wallet")||s.includes("metamask")||s.includes("provider")||s.includes("ethereum")?(a.errorType="WALLET_ERROR",a.userMessage="钱包连接问题",a.details="MetaMask钱包连接失败，请检查钱包状态",a.suggestions=["确保MetaMask已安装并解锁","检查钱包是否连接到正确的网络","尝试重新连接钱包","刷新页面后重试"]):s.includes("user rejected")||s.includes("user denied")||s.includes("cancel")||s.includes("rejected")?(a.errorType="USER_REJECTED",a.userMessage="您取消了操作",a.details="在MetaMask中取消了交易请求",a.suggestions=["请重新点击确认按钮","在MetaMask中确认交易请求","检查MetaMask弹窗是否被阻止"]):(a.errorType="UNKNOWN_ERROR",a.userMessage=`充值失败: ${e.message}`,a.details="发生未知错误，需要进一步分析",a.suggestions=["刷新页面后重试","检查钱包状态","联系技术支持","查看控制台错误日志"])}if(a.technicalDetails={originalError:e.message,errorStack:e.stack,errorType:e.errorType,contractName:e.contractName,methodName:e.methodName,timestamp:e.timestamp,deviceInfo:{userAgent:navigator.userAgent,platform:navigator.platform,isMobile:T.isMobile,onLine:navigator.onLine},operationContext:{operation:"recharge",amount:O.value,walletAddress:L.value,currentTime:(new Date).toISOString()}},T.isMobile){console.log("📱 添加移动端特定分析...");const s=T.analyzeMobileError(e,{operation:"recharge",amount:O.value,timestamp:(new Date).toISOString()});a.details=s.details||a.details,a.suggestions=[...a.suggestions,...s.suggestions]}return console.log("📋 充值错误详细分析完成:",a),a},Q=async()=>{try{D.value=!1,"RPC_ERROR"===U.value.errorType?(o({title:"正在重试，请稍候...",icon:"loading",duration:2e3}),await new Promise((e=>setTimeout(e,3e3)))):await new Promise((e=>setTimeout(e,500))),O.value&&await K(O.value)}catch(e){console.error("❌ 重试充值失败:",e),e.message&&e.message.includes("RPC endpoint returned HTTP client error")?J(e):q(e)}},X=()=>{S.value=!S.value},Y=async()=>{try{console.log("🔍 开始运行问题诊断..."),b({title:"正在诊断...",mask:!0});const e=await ee();E(),ae(e)}catch(e){E(),console.error("❌ 诊断失败:",e),o({title:"诊断失败",icon:"none",duration:2e3})}},ee=async()=>{const e={timestamp:(new Date).toISOString(),checks:[]};try{const a=await P.checkNetwork();e.checks.push({name:"网络状态",status:a.isSupported?"✅ 正常":"❌ 异常",details:`链ID: ${a.chainId}, 支持: ${a.isSupported}`,severity:a.isSupported?"low":"high"})}catch(a){e.checks.push({name:"网络状态",status:"❌ 检查失败",details:a.message,severity:"high"})}try{L.value?e.checks.push({name:"钱包连接",status:"✅ 已连接",details:`地址: ${L.value}`,severity:"low"}):e.checks.push({name:"钱包连接",status:"❌ 未连接",details:"钱包未连接或连接失败",severity:"high"})}catch(a){e.checks.push({name:"钱包连接",status:"❌ 检查失败",details:a.message,severity:"high"})}try{const a=P.isInitialized;e.checks.push({name:"合约服务",status:a?"✅ 已初始化":"❌ 未初始化",details:`初始化状态: ${a}`,severity:a?"low":"medium"})}catch(a){e.checks.push({name:"合约服务",status:"❌ 检查失败",details:a.message,severity:"medium"})}try{const a=navigator.onLine,s=T.isMobile;e.checks.push({name:"设备环境",status:"✅ 正常",details:`在线: ${a}, 设备: ${s?"移动端":"桌面端"}`,severity:"low"})}catch(a){e.checks.push({name:"设备环境",status:"❌ 检查失败",details:a.message,severity:"medium"})}try{$.value&&"0.000000"!==$.value?e.checks.push({name:"VGAU余额",status:"✅ 正常",details:`余额: ${$.value}`,severity:"low"}):e.checks.push({name:"VGAU余额",status:"⚠️ 余额为0",details:"当前VGAU余额为0",severity:"medium"})}catch(a){e.checks.push({name:"VGAU余额",status:"❌ 检查失败",details:a.message,severity:"medium"})}return console.log("📋 诊断检查完成:",e),e},ae=e=>{const a=e.checks,s=a.filter((e=>"high"===e.severity)),t=a.filter((e=>"medium"===e.severity));let o="诊断完成！\n\n";s.length>0&&(o+="🔴 严重问题:\n",s.forEach((e=>{o+=`• ${e.name}: ${e.details}\n`})),o+="\n"),t.length>0&&(o+="🟡 需要注意:\n",t.forEach((e=>{o+=`• ${e.name}: ${e.details}\n`})),o+="\n"),0===s.length&&0===t.length&&(o+="✅ 所有检查项都正常！"),R({title:"问题诊断结果",content:o,showCancel:!1,confirmText:"确定"})};return(e,a)=>{const s=d,t=i,o=h,w=v;return n(),r(t,{class:"content"},{default:l((()=>[c(t,{class:"header"},{default:l((()=>[c(t,{class:"header-content"},{default:l((()=>[c(t,{class:"back-btn",onClick:F},{default:l((()=>[c(s,{class:"back-icon",src:N,mode:"aspectFit"})])),_:1}),c(t,{class:"title-container"},{default:l((()=>[c(t,{class:"vgau-icon"},{default:l((()=>[c(s,{class:"vgau-logo",src:I,mode:"aspectFit"})])),_:1}),c(t,{class:"title"},{default:l((()=>[g(m(e.$t("rechargePage.vgauRecharge")),1)])),_:1})])),_:1})])),_:1})])),_:1}),c(t,{class:"main-content"},{default:l((()=>[c(t,{class:"content-area"},{default:l((()=>[c(t,{class:"amount-section"},{default:l((()=>[c(t,{class:"section-title"},{default:l((()=>[g(m(e.$t("rechargePage.amount")),1)])),_:1}),c(t,{class:"input-container"},{default:l((()=>[c(t,{class:"input-field"},{default:l((()=>[c(o,{class:"amount-input",type:"number",placeholder:e.$t("rechargePage.minimumAmount"),modelValue:C.value,"onUpdate:modelValue":a[0]||(a[0]=e=>C.value=e),onInput:j},null,8,["placeholder","modelValue"]),c(t,{class:"currency-label"},{default:l((()=>[g("VGAU |"+m(e.$t("rechargePage.max")),1)])),_:1})])),_:1}),c(t,{class:"divider"}),c(t,{class:"redeemable-info"},{default:l((()=>[c(w,{class:"redeemable-label"},{default:l((()=>[g(m(e.$t("rechargePage.availableBalance")),1)])),_:1}),c(w,{class:"redeemable-amount"},{default:l((()=>[g(m($.value)+" vgau",1)])),_:1})])),_:1})])),_:1})])),_:1})])),_:1}),c(t,{class:"confirm-section"},{default:l((()=>[c(t,{class:f(["confirm-btn",{disabled:A.value}]),onClick:H},{default:l((()=>[c(w,{class:"confirm-text"},{default:l((()=>[g(m(A.value?e.$t("rechargePage.processing"):e.$t("rechargePage.confirmOperation")),1)])),_:1})])),_:1},8,["class"])])),_:1}),x.value?(n(),r(t,{key:0,class:"modal-overlay",onClick:a[3]||(a[3]=e=>x.value=!1)},{default:l((()=>[c(t,{class:"modal-content",onClick:a[2]||(a[2]=p((()=>{}),["stop"]))},{default:l((()=>[c(t,{class:"modal-text"},{default:l((()=>[c(w,{class:"recharge-title"},{default:l((()=>[g(m(y(G)("recharge.modal.title")),1)])),_:1}),c(w,{class:"recharge-desc"},{default:l((()=>[g(m(y(G)("recharge.modal.content",{amount:O.value,symbol:"VGAU"})),1)])),_:1})])),_:1}),c(t,{class:"modal-actions"},{default:l((()=>[c(t,{class:"modal-btn outline",onClick:a[1]||(a[1]=e=>x.value=!1)},{default:l((()=>[g(m(y(G)("recharge.modal.cancel")),1)])),_:1}),c(t,{class:f(["modal-btn solid",{disabled:A.value}]),onClick:z},{default:l((()=>[g(m(y(G)("recharge.modal.confirm")),1)])),_:1},8,["class"])])),_:1})])),_:1})])),_:1})):u("",!0)])),_:1}),D.value?(n(),r(t,{key:0,class:"error-modal",onClick:a[7]||(a[7]=e=>D.value=!1)},{default:l((()=>[c(t,{class:"error-modal-content",onClick:a[6]||(a[6]=p((()=>{}),["stop"]))},{default:l((()=>[c(t,{class:"error-header"},{default:l((()=>[c(w,{class:"error-title"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.title")),1)])),_:1}),c(t,{class:"close-btn",onClick:a[4]||(a[4]=e=>D.value=!1)},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.close")),1)])),_:1})])),_:1}),c(t,{class:"error-details"},{default:l((()=>[c(w,{class:"error-message"},{default:l((()=>[g(m(U.value.message),1)])),_:1}),U.value.details?(n(),r(w,{key:0,class:"error-description"},{default:l((()=>[g(m(U.value.details),1)])),_:1})):u("",!0)])),_:1}),U.value.suggestions&&U.value.suggestions.length>0?(n(),r(t,{key:0,class:"error-suggestions"},{default:l((()=>[c(w,{class:"suggestions-title"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.suggestions")),1)])),_:1}),(n(!0),M(_,null,k(U.value.suggestions,((e,a)=>(n(),r(t,{class:"suggestion-item",key:a},{default:l((()=>[c(w,{class:"suggestion-text"},{default:l((()=>[g(m(a+1)+". "+m(e),1)])),_:2},1024)])),_:2},1024)))),128))])),_:1})):u("",!0),S.value?(n(),r(t,{key:1,class:"debug-info"},{default:l((()=>{var a,s,t,o,i;return[c(w,{class:"debug-title"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.debugInfo")),1)])),_:1}),c(w,{class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.errorType"))+": "+m(U.value.errorType||"未知"),1)])),_:1}),c(w,{class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.contract"))+": "+m(U.value.contractName||"未知"),1)])),_:1}),c(w,{class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.method"))+": "+m(U.value.methodName||"未知"),1)])),_:1}),c(w,{class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.timestamp"))+": "+m(U.value.timestamp||"未知"),1)])),_:1}),U.value.technicalDetails?(n(),r(w,{key:0,class:"debug-text"},{default:l((()=>[g("原始错误: "+m(U.value.technicalDetails.originalError||"未知"),1)])),_:1})):u("",!0),(null==(a=U.value.technicalDetails)?void 0:a.operationContext)?(n(),r(w,{key:1,class:"debug-text"},{default:l((()=>[g("操作金额: "+m(U.value.technicalDetails.operationContext.amount||"未知"),1)])),_:1})):u("",!0),(null==(s=U.value.technicalDetails)?void 0:s.operationContext)?(n(),r(w,{key:2,class:"debug-text"},{default:l((()=>[g("钱包地址: "+m(U.value.technicalDetails.operationContext.walletAddress||"未知"),1)])),_:1})):u("",!0),(null==(t=U.value.technicalDetails)?void 0:t.deviceInfo)?(n(),r(w,{key:3,class:"debug-text"},{default:l((()=>[g("设备类型: "+m(U.value.technicalDetails.deviceInfo.isMobile?"移动端":"桌面端"),1)])),_:1})):u("",!0),(null==(o=U.value.technicalDetails)?void 0:o.deviceInfo)?(n(),r(w,{key:4,class:"debug-text"},{default:l((()=>[g("网络状态: "+m(U.value.technicalDetails.deviceInfo.onLine?"在线":"离线"),1)])),_:1})):u("",!0),(null==(i=U.value.technicalDetails)?void 0:i.deviceInfo)?(n(),r(w,{key:5,class:"debug-text"},{default:l((()=>[g("平台: "+m(U.value.technicalDetails.deviceInfo.platform||"未知"),1)])),_:1})):u("",!0),y(T).isMobile?(n(),r(w,{key:6,class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.deviceType"))+": "+m(e.$t("rechargePage.errorModal.mobile")),1)])),_:1})):u("",!0),y(T).isMobile?(n(),r(w,{key:7,class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.platform"))+": "+m(y(T).deviceInfo.platform),1)])),_:1})):u("",!0),y(T).isMobile?(n(),r(w,{key:8,class:"debug-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.onlineStatus"))+": "+m(y(T).deviceInfo.onLine?e.$t("rechargePage.errorModal.online"):e.$t("rechargePage.errorModal.offline")),1)])),_:1})):u("",!0)]})),_:1})):u("",!0),c(t,{class:"error-actions"},{default:l((()=>[c(t,{class:"retry-btn",onClick:Q},{default:l((()=>[c(w,{class:"retry-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.retry")),1)])),_:1})])),_:1}),c(t,{class:"diagnose-btn",onClick:Y},{default:l((()=>[c(w,{class:"diagnose-text"},{default:l((()=>[g("🔍 诊断问题")])),_:1})])),_:1}),c(t,{class:"debug-btn",onClick:X},{default:l((()=>[c(w,{class:"debug-btn-text"},{default:l((()=>[g(m(S.value?e.$t("rechargePage.errorModal.hideDebug"):e.$t("rechargePage.errorModal.showDebug")),1)])),_:1})])),_:1}),c(t,{class:"close-error-btn",onClick:a[5]||(a[5]=e=>D.value=!1)},{default:l((()=>[c(w,{class:"close-error-text"},{default:l((()=>[g(m(e.$t("rechargePage.errorModal.closeError")),1)])),_:1})])),_:1})])),_:1})])),_:1})])),_:1})):u("",!0)])),_:1})}}},[["__scopeId","data-v-f86bf836"]]);export{C as default};
